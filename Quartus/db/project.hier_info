|main_test
rs <= mx_2x1:inst32.m_out
clk => mx_2x1:inst44.s_1
clk => life_count_LED:inst10.clk
clk => PNU_CLK_DIV:inst17.clk
clk => mx_2x1:inst.s_0
clk => start_game:inst38.clk
clk => lfsr_random:inst9.clk
clk => trigger:inst1.CLK
clk => toggle_keep:inst5.clk
clk => trigger:inst6.CLK
clk => array8_segment:inst3.clk
clk => mx_2x1:inst40.s_1
clk => hit_COLORLED:inst11.clk
postition_rst => life_count_LED:inst10.rst
postition_rst => lcd_custom_object_init:inst8.rst
postition_rst => start_game:inst38.rst
postition_rst => clk_speed:inst21.rst
postition_rst => lcd_write_object_char:inst4.rst
postition_rst => lfsr_random:inst9.reset
postition_rst => toggle_keep:inst5.rst
postition_rst => gamemover:inst43.rst
postition_rst => array8_segment:inst3.rst
postition_rst => start_LCD:inst28.rst
postition_rst => super_mario_music:inst25.rst
postition_rst => motor:inst7.rst
postition_rst => hit_COLORLED:inst11.rst
rst => inst2.IN0
startBTN => start_game:inst38.start
topbottom => trigger:inst1.Din
rw <= mx_2x1:inst33.m_out
e <= mx_2x1:inst34.m_out
init_end <= inst22.DB_MAX_OUTPUT_PORT_TYPE
life0 <= life_count_LED:inst10.life_0
life1 <= life_count_LED:inst10.life_1
life2 <= life_count_LED:inst10.life_2
die <= life_count_LED:inst10.die
piezo <= mx_2x1:inst31.m_out
motorA <= motor:inst7.a
motorB <= motor:inst7.b
motorC <= motor:inst7.c
motorD <= motor:inst7.d
com[0] <= array8_segment:inst3.com[0]
com[1] <= array8_segment:inst3.com[1]
com[2] <= array8_segment:inst3.com[2]
com[3] <= array8_segment:inst3.com[3]
com[4] <= array8_segment:inst3.com[4]
com[5] <= array8_segment:inst3.com[5]
com[6] <= array8_segment:inst3.com[6]
com[7] <= array8_segment:inst3.com[7]
data[0] <= mx_8bit_2x1:inst35.m_out[0]
data[1] <= mx_8bit_2x1:inst35.m_out[1]
data[2] <= mx_8bit_2x1:inst35.m_out[2]
data[3] <= mx_8bit_2x1:inst35.m_out[3]
data[4] <= mx_8bit_2x1:inst35.m_out[4]
data[5] <= mx_8bit_2x1:inst35.m_out[5]
data[6] <= mx_8bit_2x1:inst35.m_out[6]
data[7] <= mx_8bit_2x1:inst35.m_out[7]
LED_B[0] <= hit_COLORLED:inst11.BLUE[0]
LED_B[1] <= hit_COLORLED:inst11.BLUE[1]
LED_B[2] <= hit_COLORLED:inst11.BLUE[2]
LED_B[3] <= hit_COLORLED:inst11.BLUE[3]
LED_G[0] <= hit_COLORLED:inst11.GREEN[0]
LED_G[1] <= hit_COLORLED:inst11.GREEN[1]
LED_G[2] <= hit_COLORLED:inst11.GREEN[2]
LED_G[3] <= hit_COLORLED:inst11.GREEN[3]
LED_R[0] <= hit_COLORLED:inst11.RED[0]
LED_R[1] <= hit_COLORLED:inst11.RED[1]
LED_R[2] <= hit_COLORLED:inst11.RED[2]
LED_R[3] <= hit_COLORLED:inst11.RED[3]
segdata[0] <= array8_segment:inst3.num_data[0]
segdata[1] <= array8_segment:inst3.num_data[1]
segdata[2] <= array8_segment:inst3.num_data[2]
segdata[3] <= array8_segment:inst3.num_data[3]
segdata[4] <= array8_segment:inst3.num_data[4]
segdata[5] <= array8_segment:inst3.num_data[5]
segdata[6] <= array8_segment:inst3.num_data[6]


|main_test|mx_2x1:inst32
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|gamemover:inst43
clk_1MHz => lcd_en~reg0.CLK
clk_1MHz => lcd_rs~reg0.CLK
clk_1MHz => lcd_data[0]~reg0.CLK
clk_1MHz => lcd_data[1]~reg0.CLK
clk_1MHz => lcd_data[2]~reg0.CLK
clk_1MHz => lcd_data[3]~reg0.CLK
clk_1MHz => lcd_data[4]~reg0.CLK
clk_1MHz => lcd_data[5]~reg0.CLK
clk_1MHz => lcd_data[6]~reg0.CLK
clk_1MHz => lcd_data[7]~reg0.CLK
clk_1MHz => piezo~reg0.CLK
clk_1MHz => pos[0].CLK
clk_1MHz => pos[1].CLK
clk_1MHz => pos[2].CLK
clk_1MHz => pos[3].CLK
clk_1MHz => lcd_count[0].CLK
clk_1MHz => lcd_count[1].CLK
clk_1MHz => lcd_count[2].CLK
clk_1MHz => lcd_count[3].CLK
clk_1MHz => lcd_count[4].CLK
clk_1MHz => lcd_count[5].CLK
clk_1MHz => lcd_count[6].CLK
clk_1MHz => lcd_count[7].CLK
clk_1MHz => lcd_count[8].CLK
clk_1MHz => lcd_count[9].CLK
clk_1MHz => lcd_count[10].CLK
clk_1MHz => lcd_count[11].CLK
clk_1MHz => lcd_count[12].CLK
clk_1MHz => lcd_count[13].CLK
clk_1MHz => lcd_count[14].CLK
clk_1MHz => lcd_count[15].CLK
clk_1MHz => duration_counter[0].CLK
clk_1MHz => duration_counter[1].CLK
clk_1MHz => duration_counter[2].CLK
clk_1MHz => duration_counter[3].CLK
clk_1MHz => duration_counter[4].CLK
clk_1MHz => duration_counter[5].CLK
clk_1MHz => duration_counter[6].CLK
clk_1MHz => duration_counter[7].CLK
clk_1MHz => duration_counter[8].CLK
clk_1MHz => duration_counter[9].CLK
clk_1MHz => duration_counter[10].CLK
clk_1MHz => duration_counter[11].CLK
clk_1MHz => duration_counter[12].CLK
clk_1MHz => duration_counter[13].CLK
clk_1MHz => duration_counter[14].CLK
clk_1MHz => duration_counter[15].CLK
clk_1MHz => duration_counter[16].CLK
clk_1MHz => duration_counter[17].CLK
clk_1MHz => duration_counter[18].CLK
clk_1MHz => duration_counter[19].CLK
clk_1MHz => duration_counter[20].CLK
clk_1MHz => duration_counter[21].CLK
clk_1MHz => duration_counter[22].CLK
clk_1MHz => duration_counter[23].CLK
clk_1MHz => duration_counter[24].CLK
clk_1MHz => duration_counter[25].CLK
clk_1MHz => duration_counter[26].CLK
clk_1MHz => duration_counter[27].CLK
clk_1MHz => duration_counter[28].CLK
clk_1MHz => duration_counter[29].CLK
clk_1MHz => duration_counter[30].CLK
clk_1MHz => duration_counter[31].CLK
clk_1MHz => counter[0].CLK
clk_1MHz => counter[1].CLK
clk_1MHz => counter[2].CLK
clk_1MHz => counter[3].CLK
clk_1MHz => counter[4].CLK
clk_1MHz => counter[5].CLK
clk_1MHz => counter[6].CLK
clk_1MHz => counter[7].CLK
clk_1MHz => counter[8].CLK
clk_1MHz => counter[9].CLK
clk_1MHz => counter[10].CLK
clk_1MHz => counter[11].CLK
clk_1MHz => counter[12].CLK
clk_1MHz => counter[13].CLK
clk_1MHz => counter[14].CLK
clk_1MHz => counter[15].CLK
clk_1MHz => counter[16].CLK
clk_1MHz => counter[17].CLK
clk_1MHz => counter[18].CLK
clk_1MHz => counter[19].CLK
clk_1MHz => counter[20].CLK
clk_1MHz => counter[21].CLK
clk_1MHz => counter[22].CLK
clk_1MHz => counter[23].CLK
clk_1MHz => counter[24].CLK
clk_1MHz => counter[25].CLK
clk_1MHz => counter[26].CLK
clk_1MHz => counter[27].CLK
clk_1MHz => counter[28].CLK
clk_1MHz => counter[29].CLK
clk_1MHz => counter[30].CLK
clk_1MHz => counter[31].CLK
clk_1MHz => note_index[0].CLK
clk_1MHz => note_index[1].CLK
clk_1MHz => note_index[2].CLK
clk_1MHz => note_index[3].CLK
clk_1MHz => note_index[4].CLK
clk_1MHz => note_index[5].CLK
clk_1MHz => note_index[6].CLK
clk_1MHz => note_index[7].CLK
clk_1MHz => note_index[8].CLK
clk_1MHz => note_index[9].CLK
clk_1MHz => note_index[10].CLK
clk_1MHz => note_index[11].CLK
clk_1MHz => note_index[12].CLK
clk_1MHz => note_index[13].CLK
clk_1MHz => note_index[14].CLK
clk_1MHz => note_index[15].CLK
clk_1MHz => note_index[16].CLK
clk_1MHz => note_index[17].CLK
clk_1MHz => note_index[18].CLK
clk_1MHz => note_index[19].CLK
clk_1MHz => note_index[20].CLK
clk_1MHz => note_index[21].CLK
clk_1MHz => note_index[22].CLK
clk_1MHz => note_index[23].CLK
clk_1MHz => note_index[24].CLK
clk_1MHz => note_index[25].CLK
clk_1MHz => note_index[26].CLK
clk_1MHz => note_index[27].CLK
clk_1MHz => note_index[28].CLK
clk_1MHz => note_index[29].CLK
clk_1MHz => note_index[30].CLK
clk_1MHz => note_index[31].CLK
clk_1MHz => state~11.DATAIN
rst => piezo~reg0.ACLR
rst => pos[0].ACLR
rst => pos[1].ACLR
rst => pos[2].ACLR
rst => pos[3].ACLR
rst => lcd_count[0].ACLR
rst => lcd_count[1].ACLR
rst => lcd_count[2].ACLR
rst => lcd_count[3].ACLR
rst => lcd_count[4].ACLR
rst => lcd_count[5].ACLR
rst => lcd_count[6].ACLR
rst => lcd_count[7].ACLR
rst => lcd_count[8].ACLR
rst => lcd_count[9].ACLR
rst => lcd_count[10].ACLR
rst => lcd_count[11].ACLR
rst => lcd_count[12].ACLR
rst => lcd_count[13].ACLR
rst => lcd_count[14].ACLR
rst => lcd_count[15].ACLR
rst => duration_counter[0].ACLR
rst => duration_counter[1].ACLR
rst => duration_counter[2].ACLR
rst => duration_counter[3].ACLR
rst => duration_counter[4].ACLR
rst => duration_counter[5].ACLR
rst => duration_counter[6].ACLR
rst => duration_counter[7].ACLR
rst => duration_counter[8].ACLR
rst => duration_counter[9].ACLR
rst => duration_counter[10].ACLR
rst => duration_counter[11].ACLR
rst => duration_counter[12].ACLR
rst => duration_counter[13].ACLR
rst => duration_counter[14].ACLR
rst => duration_counter[15].ACLR
rst => duration_counter[16].ACLR
rst => duration_counter[17].ACLR
rst => duration_counter[18].ACLR
rst => duration_counter[19].ACLR
rst => duration_counter[20].ACLR
rst => duration_counter[21].ACLR
rst => duration_counter[22].ACLR
rst => duration_counter[23].ACLR
rst => duration_counter[24].ACLR
rst => duration_counter[25].ACLR
rst => duration_counter[26].ACLR
rst => duration_counter[27].ACLR
rst => duration_counter[28].ACLR
rst => duration_counter[29].ACLR
rst => duration_counter[30].ACLR
rst => duration_counter[31].ACLR
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => counter[8].ACLR
rst => counter[9].ACLR
rst => counter[10].ACLR
rst => counter[11].ACLR
rst => counter[12].ACLR
rst => counter[13].ACLR
rst => counter[14].ACLR
rst => counter[15].ACLR
rst => counter[16].ACLR
rst => counter[17].ACLR
rst => counter[18].ACLR
rst => counter[19].ACLR
rst => counter[20].ACLR
rst => counter[21].ACLR
rst => counter[22].ACLR
rst => counter[23].ACLR
rst => counter[24].ACLR
rst => counter[25].ACLR
rst => counter[26].ACLR
rst => counter[27].ACLR
rst => counter[28].ACLR
rst => counter[29].ACLR
rst => counter[30].ACLR
rst => counter[31].ACLR
rst => note_index[0].ACLR
rst => note_index[1].ACLR
rst => note_index[2].ACLR
rst => note_index[3].ACLR
rst => note_index[4].ACLR
rst => note_index[5].ACLR
rst => note_index[6].ACLR
rst => note_index[7].ACLR
rst => note_index[8].ACLR
rst => note_index[9].ACLR
rst => note_index[10].ACLR
rst => note_index[11].ACLR
rst => note_index[12].ACLR
rst => note_index[13].ACLR
rst => note_index[14].ACLR
rst => note_index[15].ACLR
rst => note_index[16].ACLR
rst => note_index[17].ACLR
rst => note_index[18].ACLR
rst => note_index[19].ACLR
rst => note_index[20].ACLR
rst => note_index[21].ACLR
rst => note_index[22].ACLR
rst => note_index[23].ACLR
rst => note_index[24].ACLR
rst => note_index[25].ACLR
rst => note_index[26].ACLR
rst => note_index[27].ACLR
rst => note_index[28].ACLR
rst => note_index[29].ACLR
rst => note_index[30].ACLR
rst => note_index[31].ACLR
rst => state~13.DATAIN
rst => lcd_en~reg0.ENA
rst => lcd_data[7]~reg0.ENA
rst => lcd_data[6]~reg0.ENA
rst => lcd_data[5]~reg0.ENA
rst => lcd_data[4]~reg0.ENA
rst => lcd_data[3]~reg0.ENA
rst => lcd_data[2]~reg0.ENA
rst => lcd_data[1]~reg0.ENA
rst => lcd_data[0]~reg0.ENA
rst => lcd_rs~reg0.ENA
digit1[0] => Mux15.IN0
digit1[1] => Mux14.IN0
digit1[2] => Mux13.IN0
digit1[3] => Mux12.IN0
digit2[0] => Mux15.IN1
digit2[1] => Mux14.IN1
digit2[2] => Mux13.IN1
digit2[3] => Mux12.IN1
digit3[0] => Mux15.IN2
digit3[1] => Mux14.IN2
digit3[2] => Mux13.IN2
digit3[3] => Mux12.IN2
digit4[0] => Mux15.IN3
digit4[1] => Mux14.IN3
digit4[2] => Mux13.IN3
digit4[3] => Mux12.IN3
digit5[0] => Mux15.IN4
digit5[1] => Mux14.IN4
digit5[2] => Mux13.IN4
digit5[3] => Mux12.IN4
digit6[0] => Mux15.IN5
digit6[1] => Mux14.IN5
digit6[2] => Mux13.IN5
digit6[3] => Mux12.IN5
digit7[0] => Mux15.IN6
digit7[1] => Mux14.IN6
digit7[2] => Mux13.IN6
digit7[3] => Mux12.IN6
digit8[0] => Mux15.IN7
digit8[1] => Mux14.IN7
digit8[2] => Mux13.IN7
digit8[3] => Mux12.IN7
piezo <= piezo~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rs <= lcd_rs~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rw <= <GND>
lcd_en <= lcd_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[0] <= lcd_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[1] <= lcd_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[2] <= lcd_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[3] <= lcd_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[4] <= lcd_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[5] <= lcd_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[6] <= lcd_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[7] <= lcd_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|mx_2x1:inst44
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|life_count_LED:inst10
clk => die~reg0.CLK
clk => life_2~reg0.CLK
clk => life_1~reg0.CLK
clk => life_0~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
rst => die~reg0.ACLR
rst => life_2~reg0.PRESET
rst => life_1~reg0.PRESET
rst => life_0~reg0.PRESET
rst => count[0].PRESET
rst => count[1].PRESET
rst => count[2].ACLR
rst => count[3].ACLR
hit => count.OUTPUTSELECT
hit => count.OUTPUTSELECT
hit => count.OUTPUTSELECT
hit => count.OUTPUTSELECT
life_0 <= life_0~reg0.DB_MAX_OUTPUT_PORT_TYPE
life_1 <= life_1~reg0.DB_MAX_OUTPUT_PORT_TYPE
life_2 <= life_2~reg0.DB_MAX_OUTPUT_PORT_TYPE
die <= die~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|trigger:inst6
Dout <= inst.DB_MAX_OUTPUT_PORT_TYPE
rst_n => inst2.ACLR
rst_n => inst3.ACLR
CLK => inst2.CLK
CLK => inst3.CLK
Din => inst2.DATAIN


|main_test|lcd_write_object_char:inst4
clk => position.CLK
clk => hit~reg0.CLK
clk => next_output~reg0.CLK
clk => lcd_en~reg0.CLK
clk => lcd_rw~reg0.CLK
clk => lcd_rs~reg0.CLK
clk => lcd_data[0]~reg0.CLK
clk => lcd_data[1]~reg0.CLK
clk => lcd_data[2]~reg0.CLK
clk => lcd_data[3]~reg0.CLK
clk => lcd_data[4]~reg0.CLK
clk => lcd_data[5]~reg0.CLK
clk => lcd_data[6]~reg0.CLK
clk => lcd_data[7]~reg0.CLK
clk => pos[0].CLK
clk => pos[1].CLK
clk => pos[2].CLK
clk => pos[3].CLK
clk => obj_position.CLK
clk => pos_now[0].CLK
clk => pos_now[1].CLK
clk => pos_now[2].CLK
clk => pos_now[3].CLK
clk => pos_now[4].CLK
clk => pos_now[5].CLK
clk => pos_now[6].CLK
clk => data_two[0].CLK
clk => data_two[1].CLK
clk => data_two[2].CLK
clk => data_two[3].CLK
clk => data_two[4].CLK
clk => data_two[5].CLK
clk => data_two[6].CLK
clk => data_two[7].CLK
clk => data_one[0].CLK
clk => data_one[1].CLK
clk => data_one[2].CLK
clk => data_one[3].CLK
clk => data_one[4].CLK
clk => data_one[5].CLK
clk => data_one[6].CLK
clk => data_one[7].CLK
clk => state~52.DATAIN
rst => position.ACLR
rst => hit~reg0.ACLR
rst => next_output~reg0.ACLR
rst => lcd_en~reg0.ACLR
rst => lcd_rw~reg0.ACLR
rst => lcd_rs~reg0.ACLR
rst => lcd_data[0]~reg0.ACLR
rst => lcd_data[1]~reg0.ACLR
rst => lcd_data[2]~reg0.ACLR
rst => lcd_data[3]~reg0.ACLR
rst => lcd_data[4]~reg0.ACLR
rst => lcd_data[5]~reg0.ACLR
rst => lcd_data[6]~reg0.ACLR
rst => lcd_data[7]~reg0.ACLR
rst => obj_position.ACLR
rst => pos_now[0].ACLR
rst => pos_now[1].ACLR
rst => pos_now[2].ACLR
rst => pos_now[3].ACLR
rst => pos_now[4].ACLR
rst => pos_now[5].ACLR
rst => pos_now[6].ACLR
rst => data_two[0].PRESET
rst => data_two[1].PRESET
rst => data_two[2].ACLR
rst => data_two[3].ACLR
rst => data_two[4].ACLR
rst => data_two[5].ACLR
rst => data_two[6].ACLR
rst => data_two[7].ACLR
rst => data_one[0].ACLR
rst => data_one[1].ACLR
rst => data_one[2].ACLR
rst => data_one[3].ACLR
rst => data_one[4].ACLR
rst => data_one[5].ACLR
rst => data_one[6].ACLR
rst => data_one[7].ACLR
rst => state~54.DATAIN
rst => pos[3].ENA
rst => pos[2].ENA
rst => pos[1].ENA
rst => pos[0].ENA
obj_zero_bottom_one_top => obj_position.DATAB
obj_zero_bottom_one_top => pos_now.DATAB
char_zero_bottom_one_top => always0.IN1
char_zero_bottom_one_top => position.DATAB
char_zero_bottom_one_top => state.DATAB
char_zero_bottom_one_top => state.DATAB
next => data_one.OUTPUTSELECT
next => data_one.OUTPUTSELECT
next => data_one.OUTPUTSELECT
next => data_one.OUTPUTSELECT
next => data_one.OUTPUTSELECT
next => data_one.OUTPUTSELECT
next => data_one.OUTPUTSELECT
next => data_one.OUTPUTSELECT
next => data_two.OUTPUTSELECT
next => data_two.OUTPUTSELECT
next => data_two.OUTPUTSELECT
next => data_two.OUTPUTSELECT
next => data_two.OUTPUTSELECT
next => data_two.OUTPUTSELECT
next => data_two.OUTPUTSELECT
next => data_two.OUTPUTSELECT
next => pos.OUTPUTSELECT
next => pos.OUTPUTSELECT
next => pos.OUTPUTSELECT
next => pos.OUTPUTSELECT
next => pos_now.OUTPUTSELECT
next => pos_now.OUTPUTSELECT
next => pos_now.OUTPUTSELECT
next => pos_now.OUTPUTSELECT
next => pos_now.OUTPUTSELECT
next => pos_now.OUTPUTSELECT
next => pos_now.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => state.OUTPUTSELECT
next => obj_position.OUTPUTSELECT
next => hit.OUTPUTSELECT
next => next_output.DATAA
lcd_data[0] <= lcd_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[1] <= lcd_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[2] <= lcd_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[3] <= lcd_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[4] <= lcd_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[5] <= lcd_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[6] <= lcd_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[7] <= lcd_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rs <= lcd_rs~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rw <= lcd_rw~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_en <= lcd_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
next_output <= next_output~reg0.DB_MAX_OUTPUT_PORT_TYPE
hit <= hit~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|mx_2x1:inst12
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|clk_speed:inst21
clk => score_count[0].CLK
clk => score_count[1].CLK
clk => score_count[2].CLK
clk => score_count[3].CLK
clk => score_count[4].CLK
clk => score_count[5].CLK
clk => score_count[6].CLK
clk => score_count[7].CLK
clk => score_count[8].CLK
clk => score_count[9].CLK
clk => score_count[10].CLK
clk => score_count[11].CLK
clk => score_count[12].CLK
clk => score_count[13].CLK
clk => score_count[14].CLK
clk => score_count[15].CLK
clk => score_count[16].CLK
clk => score_count[17].CLK
clk => score_count[18].CLK
clk => score_count[19].CLK
clk => score_count[20].CLK
clk => score_count[21].CLK
clk => score_count[22].CLK
clk => score_count[23].CLK
clk => score_count[24].CLK
clk => score_count[25].CLK
clk => score_count[26].CLK
clk => score_count[27].CLK
clk => score_count[28].CLK
clk => score_count[29].CLK
clk => score_count[30].CLK
clk => score_count[31].CLK
clk => scoreUP~reg0.CLK
clk => game_clk~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => div[0].CLK
clk => div[1].CLK
clk => div[2].CLK
clk => div[3].CLK
clk => div[4].CLK
clk => div[5].CLK
clk => div[6].CLK
clk => div[7].CLK
clk => div[8].CLK
clk => div[9].CLK
clk => div[10].CLK
clk => div[11].CLK
clk => div[12].CLK
clk => div[13].CLK
clk => div[14].CLK
clk => div[15].CLK
clk => div[16].CLK
clk => div[17].CLK
clk => div[18].CLK
clk => div[19].CLK
clk => div[20].CLK
clk => div[21].CLK
clk => div[22].CLK
clk => div[23].CLK
clk => div[24].CLK
clk => div[25].CLK
clk => div[26].CLK
clk => div[27].CLK
clk => div[28].CLK
clk => div[29].CLK
clk => div[30].CLK
clk => div[31].CLK
rst => score_count[0].ACLR
rst => score_count[1].ACLR
rst => score_count[2].ACLR
rst => score_count[3].ACLR
rst => score_count[4].ACLR
rst => score_count[5].ACLR
rst => score_count[6].ACLR
rst => score_count[7].ACLR
rst => score_count[8].ACLR
rst => score_count[9].ACLR
rst => score_count[10].ACLR
rst => score_count[11].ACLR
rst => score_count[12].ACLR
rst => score_count[13].ACLR
rst => score_count[14].ACLR
rst => score_count[15].ACLR
rst => score_count[16].ACLR
rst => score_count[17].ACLR
rst => score_count[18].ACLR
rst => score_count[19].ACLR
rst => score_count[20].ACLR
rst => score_count[21].ACLR
rst => score_count[22].ACLR
rst => score_count[23].ACLR
rst => score_count[24].ACLR
rst => score_count[25].ACLR
rst => score_count[26].ACLR
rst => score_count[27].ACLR
rst => score_count[28].ACLR
rst => score_count[29].ACLR
rst => score_count[30].ACLR
rst => score_count[31].ACLR
rst => scoreUP~reg0.ACLR
rst => game_clk~reg0.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => counter[8].ACLR
rst => counter[9].ACLR
rst => counter[10].ACLR
rst => counter[11].ACLR
rst => counter[12].ACLR
rst => counter[13].ACLR
rst => counter[14].ACLR
rst => counter[15].ACLR
rst => counter[16].ACLR
rst => counter[17].ACLR
rst => counter[18].ACLR
rst => counter[19].ACLR
rst => counter[20].ACLR
rst => counter[21].ACLR
rst => counter[22].ACLR
rst => counter[23].ACLR
rst => counter[24].ACLR
rst => counter[25].ACLR
rst => counter[26].ACLR
rst => counter[27].ACLR
rst => counter[28].ACLR
rst => counter[29].ACLR
rst => counter[30].ACLR
rst => counter[31].ACLR
rst => div[0].ACLR
rst => div[1].ACLR
rst => div[2].ACLR
rst => div[3].PRESET
rst => div[4].ACLR
rst => div[5].PRESET
rst => div[6].ACLR
rst => div[7].PRESET
rst => div[8].PRESET
rst => div[9].ACLR
rst => div[10].ACLR
rst => div[11].ACLR
rst => div[12].ACLR
rst => div[13].PRESET
rst => div[14].PRESET
rst => div[15].ACLR
rst => div[16].ACLR
rst => div[17].ACLR
rst => div[18].ACLR
rst => div[19].ACLR
rst => div[20].ACLR
rst => div[21].ACLR
rst => div[22].ACLR
rst => div[23].ACLR
rst => div[24].ACLR
rst => div[25].ACLR
rst => div[26].ACLR
rst => div[27].ACLR
rst => div[28].ACLR
rst => div[29].ACLR
rst => div[30].ACLR
rst => div[31].ACLR
game_clk <= game_clk~reg0.DB_MAX_OUTPUT_PORT_TYPE
scoreUP <= scoreUP~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|mx_2x1:inst37
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|lcd_custom_object_init:inst8
clk => init_end~reg0.CLK
clk => lcd_en~reg0.CLK
clk => custom_char[0][0].CLK
clk => custom_char[0][1].CLK
clk => custom_char[0][2].CLK
clk => custom_char[0][3].CLK
clk => custom_char[0][4].CLK
clk => custom_char[0][5].CLK
clk => custom_char[0][6].CLK
clk => custom_char[0][7].CLK
clk => custom_char[1][0].CLK
clk => custom_char[1][1].CLK
clk => custom_char[1][2].CLK
clk => custom_char[1][3].CLK
clk => custom_char[1][4].CLK
clk => custom_char[1][5].CLK
clk => custom_char[1][6].CLK
clk => custom_char[1][7].CLK
clk => custom_char[2][0].CLK
clk => custom_char[2][1].CLK
clk => custom_char[2][2].CLK
clk => custom_char[2][3].CLK
clk => custom_char[2][4].CLK
clk => custom_char[2][5].CLK
clk => custom_char[2][6].CLK
clk => custom_char[2][7].CLK
clk => custom_char[3][0].CLK
clk => custom_char[3][1].CLK
clk => custom_char[3][2].CLK
clk => custom_char[3][3].CLK
clk => custom_char[3][4].CLK
clk => custom_char[3][5].CLK
clk => custom_char[3][6].CLK
clk => custom_char[3][7].CLK
clk => custom_char[4][0].CLK
clk => custom_char[4][1].CLK
clk => custom_char[4][2].CLK
clk => custom_char[4][3].CLK
clk => custom_char[4][4].CLK
clk => custom_char[4][5].CLK
clk => custom_char[4][6].CLK
clk => custom_char[4][7].CLK
clk => custom_char[5][0].CLK
clk => custom_char[5][1].CLK
clk => custom_char[5][2].CLK
clk => custom_char[5][3].CLK
clk => custom_char[5][4].CLK
clk => custom_char[5][5].CLK
clk => custom_char[5][6].CLK
clk => custom_char[5][7].CLK
clk => custom_char[6][0].CLK
clk => custom_char[6][1].CLK
clk => custom_char[6][2].CLK
clk => custom_char[6][3].CLK
clk => custom_char[6][4].CLK
clk => custom_char[6][5].CLK
clk => custom_char[6][6].CLK
clk => custom_char[6][7].CLK
clk => custom_char[7][0].CLK
clk => custom_char[7][1].CLK
clk => custom_char[7][2].CLK
clk => custom_char[7][3].CLK
clk => custom_char[7][4].CLK
clk => custom_char[7][5].CLK
clk => custom_char[7][6].CLK
clk => custom_char[7][7].CLK
clk => init_num[0].CLK
clk => init_num[1].CLK
clk => init_num[2].CLK
clk => lcd_rw~reg0.CLK
clk => lcd_rs~reg0.CLK
clk => lcd_data[0]~reg0.CLK
clk => lcd_data[1]~reg0.CLK
clk => lcd_data[2]~reg0.CLK
clk => lcd_data[3]~reg0.CLK
clk => lcd_data[4]~reg0.CLK
clk => lcd_data[5]~reg0.CLK
clk => lcd_data[6]~reg0.CLK
clk => lcd_data[7]~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => state~1.DATAIN
rst => init_end~reg0.ACLR
rst => lcd_en~reg0.ACLR
rst => custom_char[0][0].PRESET
rst => custom_char[0][1].PRESET
rst => custom_char[0][2].ACLR
rst => custom_char[0][3].ACLR
rst => custom_char[0][4].ACLR
rst => custom_char[0][5].ACLR
rst => custom_char[0][6].ACLR
rst => custom_char[0][7].ACLR
rst => custom_char[1][0].PRESET
rst => custom_char[1][1].PRESET
rst => custom_char[1][2].ACLR
rst => custom_char[1][3].ACLR
rst => custom_char[1][4].ACLR
rst => custom_char[1][5].ACLR
rst => custom_char[1][6].ACLR
rst => custom_char[1][7].ACLR
rst => custom_char[2][0].PRESET
rst => custom_char[2][1].PRESET
rst => custom_char[2][2].ACLR
rst => custom_char[2][3].ACLR
rst => custom_char[2][4].ACLR
rst => custom_char[2][5].ACLR
rst => custom_char[2][6].ACLR
rst => custom_char[2][7].ACLR
rst => custom_char[3][0].PRESET
rst => custom_char[3][1].PRESET
rst => custom_char[3][2].ACLR
rst => custom_char[3][3].ACLR
rst => custom_char[3][4].ACLR
rst => custom_char[3][5].ACLR
rst => custom_char[3][6].ACLR
rst => custom_char[3][7].ACLR
rst => custom_char[4][0].PRESET
rst => custom_char[4][1].PRESET
rst => custom_char[4][2].ACLR
rst => custom_char[4][3].ACLR
rst => custom_char[4][4].ACLR
rst => custom_char[4][5].ACLR
rst => custom_char[4][6].ACLR
rst => custom_char[4][7].ACLR
rst => custom_char[5][0].PRESET
rst => custom_char[5][1].PRESET
rst => custom_char[5][2].ACLR
rst => custom_char[5][3].ACLR
rst => custom_char[5][4].ACLR
rst => custom_char[5][5].ACLR
rst => custom_char[5][6].ACLR
rst => custom_char[5][7].ACLR
rst => custom_char[6][0].PRESET
rst => custom_char[6][1].PRESET
rst => custom_char[6][2].ACLR
rst => custom_char[6][3].ACLR
rst => custom_char[6][4].ACLR
rst => custom_char[6][5].ACLR
rst => custom_char[6][6].ACLR
rst => custom_char[6][7].ACLR
rst => custom_char[7][0].PRESET
rst => custom_char[7][1].PRESET
rst => custom_char[7][2].ACLR
rst => custom_char[7][3].ACLR
rst => custom_char[7][4].ACLR
rst => custom_char[7][5].ACLR
rst => custom_char[7][6].ACLR
rst => custom_char[7][7].ACLR
rst => init_num[0].ACLR
rst => init_num[1].ACLR
rst => init_num[2].ACLR
rst => lcd_rw~reg0.ACLR
rst => lcd_rs~reg0.ACLR
rst => lcd_data[0]~reg0.ACLR
rst => lcd_data[1]~reg0.ACLR
rst => lcd_data[2]~reg0.ACLR
rst => lcd_data[3]~reg0.ACLR
rst => lcd_data[4]~reg0.ACLR
rst => lcd_data[5]~reg0.ACLR
rst => lcd_data[6]~reg0.ACLR
rst => lcd_data[7]~reg0.ACLR
rst => cnt[0].ACLR
rst => cnt[1].ACLR
rst => cnt[2].ACLR
rst => cnt[3].ACLR
rst => cnt[4].ACLR
rst => cnt[5].ACLR
rst => state~3.DATAIN
lcd_data[0] <= lcd_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[1] <= lcd_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[2] <= lcd_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[3] <= lcd_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[4] <= lcd_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[5] <= lcd_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[6] <= lcd_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[7] <= lcd_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rw <= lcd_rw~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rs <= lcd_rs~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_en <= lcd_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
init_end <= init_end~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|PNU_CLK_DIV:inst17
clk => buff.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
rst_n => buff.ACLR
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => cnt[14].ACLR
rst_n => cnt[15].ACLR
rst_n => cnt[16].ACLR
rst_n => cnt[17].ACLR
rst_n => cnt[18].ACLR
rst_n => cnt[19].ACLR
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
en => cnt.OUTPUTSELECT
div_clk <= buff.DB_MAX_OUTPUT_PORT_TYPE


|main_test|start_game:inst38
clk => gamestart~reg0.CLK
rst => gamestart~reg0.ACLR
start => gamestart~reg0.ENA
gamestart <= gamestart~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|lfsr_random:inst9
clk => random[0]~reg0.CLK
clk => random[1]~reg0.CLK
clk => random[2]~reg0.CLK
clk => random[3]~reg0.CLK
clk => random[4]~reg0.CLK
clk => random[5]~reg0.CLK
clk => random[6]~reg0.CLK
clk => random[7]~reg0.CLK
reset => random[0]~reg0.PRESET
reset => random[1]~reg0.ACLR
reset => random[2]~reg0.ACLR
reset => random[3]~reg0.ACLR
reset => random[4]~reg0.ACLR
reset => random[5]~reg0.ACLR
reset => random[6]~reg0.ACLR
reset => random[7]~reg0.ACLR
random[0] <= random[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[1] <= random[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[2] <= random[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[3] <= random[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[4] <= random[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[5] <= random[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[6] <= random[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[7] <= random[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|toggle_keep:inst5
in => out~reg0.ENA
clk => out~reg0.CLK
rst => out~reg0.ACLR
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|trigger:inst1
Dout <= inst.DB_MAX_OUTPUT_PORT_TYPE
rst_n => inst2.ACLR
rst_n => inst3.ACLR
CLK => inst2.CLK
CLK => inst3.CLK
Din => inst2.DATAIN


|main_test|array8_segment:inst3
clk => num[0].CLK
clk => num[1].CLK
clk => num[2].CLK
clk => num[3].CLK
clk => num_data[0]~reg0.CLK
clk => num_data[1]~reg0.CLK
clk => num_data[2]~reg0.CLK
clk => num_data[3]~reg0.CLK
clk => num_data[4]~reg0.CLK
clk => num_data[5]~reg0.CLK
clk => num_data[6]~reg0.CLK
clk => com[0]~reg0.CLK
clk => com[1]~reg0.CLK
clk => com[2]~reg0.CLK
clk => com[3]~reg0.CLK
clk => com[4]~reg0.CLK
clk => com[5]~reg0.CLK
clk => com[6]~reg0.CLK
clk => com[7]~reg0.CLK
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
clk => state[3].CLK
clk => index[0].CLK
clk => index[1].CLK
clk => index[2].CLK
clk => index[3].CLK
clk => digit8[0]~reg0.CLK
clk => digit8[1]~reg0.CLK
clk => digit8[2]~reg0.CLK
clk => digit8[3]~reg0.CLK
clk => digit7[0]~reg0.CLK
clk => digit7[1]~reg0.CLK
clk => digit7[2]~reg0.CLK
clk => digit7[3]~reg0.CLK
clk => digit6[0]~reg0.CLK
clk => digit6[1]~reg0.CLK
clk => digit6[2]~reg0.CLK
clk => digit6[3]~reg0.CLK
clk => digit5[0]~reg0.CLK
clk => digit5[1]~reg0.CLK
clk => digit5[2]~reg0.CLK
clk => digit5[3]~reg0.CLK
clk => digit4[0]~reg0.CLK
clk => digit4[1]~reg0.CLK
clk => digit4[2]~reg0.CLK
clk => digit4[3]~reg0.CLK
clk => digit3[0]~reg0.CLK
clk => digit3[1]~reg0.CLK
clk => digit3[2]~reg0.CLK
clk => digit3[3]~reg0.CLK
clk => digit2[0]~reg0.CLK
clk => digit2[1]~reg0.CLK
clk => digit2[2]~reg0.CLK
clk => digit2[3]~reg0.CLK
clk => digit1[0]~reg0.CLK
clk => digit1[1]~reg0.CLK
clk => digit1[2]~reg0.CLK
clk => digit1[3]~reg0.CLK
clk => score[0][0].CLK
clk => score[0][1].CLK
clk => score[0][2].CLK
clk => score[0][3].CLK
clk => score[1][0].CLK
clk => score[1][1].CLK
clk => score[1][2].CLK
clk => score[1][3].CLK
clk => score[2][0].CLK
clk => score[2][1].CLK
clk => score[2][2].CLK
clk => score[2][3].CLK
clk => score[3][0].CLK
clk => score[3][1].CLK
clk => score[3][2].CLK
clk => score[3][3].CLK
clk => score[4][0].CLK
clk => score[4][1].CLK
clk => score[4][2].CLK
clk => score[4][3].CLK
clk => score[5][0].CLK
clk => score[5][1].CLK
clk => score[5][2].CLK
clk => score[5][3].CLK
clk => score[6][0].CLK
clk => score[6][1].CLK
clk => score[6][2].CLK
clk => score[6][3].CLK
clk => score[7][0].CLK
clk => score[7][1].CLK
clk => score[7][2].CLK
clk => score[7][3].CLK
rst => num[0].ACLR
rst => num[1].ACLR
rst => num[2].ACLR
rst => num[3].ACLR
rst => num_data[0]~reg0.ACLR
rst => num_data[1]~reg0.ACLR
rst => num_data[2]~reg0.ACLR
rst => num_data[3]~reg0.ACLR
rst => num_data[4]~reg0.ACLR
rst => num_data[5]~reg0.ACLR
rst => num_data[6]~reg0.ACLR
rst => com[0]~reg0.ACLR
rst => com[1]~reg0.ACLR
rst => com[2]~reg0.ACLR
rst => com[3]~reg0.ACLR
rst => com[4]~reg0.ACLR
rst => com[5]~reg0.ACLR
rst => com[6]~reg0.ACLR
rst => com[7]~reg0.ACLR
rst => state[0].ACLR
rst => state[1].ACLR
rst => state[2].ACLR
rst => state[3].ACLR
rst => index[0].ACLR
rst => index[1].ACLR
rst => index[2].ACLR
rst => index[3].ACLR
rst => digit8[0]~reg0.ACLR
rst => digit8[1]~reg0.ACLR
rst => digit8[2]~reg0.ACLR
rst => digit8[3]~reg0.ACLR
rst => digit7[0]~reg0.ACLR
rst => digit7[1]~reg0.ACLR
rst => digit7[2]~reg0.ACLR
rst => digit7[3]~reg0.ACLR
rst => digit6[0]~reg0.ACLR
rst => digit6[1]~reg0.ACLR
rst => digit6[2]~reg0.ACLR
rst => digit6[3]~reg0.ACLR
rst => digit5[0]~reg0.ACLR
rst => digit5[1]~reg0.ACLR
rst => digit5[2]~reg0.ACLR
rst => digit5[3]~reg0.ACLR
rst => digit4[0]~reg0.ACLR
rst => digit4[1]~reg0.ACLR
rst => digit4[2]~reg0.ACLR
rst => digit4[3]~reg0.ACLR
rst => digit3[0]~reg0.ACLR
rst => digit3[1]~reg0.ACLR
rst => digit3[2]~reg0.ACLR
rst => digit3[3]~reg0.ACLR
rst => digit2[0]~reg0.ACLR
rst => digit2[1]~reg0.ACLR
rst => digit2[2]~reg0.ACLR
rst => digit2[3]~reg0.ACLR
rst => digit1[0]~reg0.ACLR
rst => digit1[1]~reg0.ACLR
rst => digit1[2]~reg0.ACLR
rst => digit1[3]~reg0.ACLR
rst => score[0][0].ACLR
rst => score[0][1].ACLR
rst => score[0][2].ACLR
rst => score[0][3].ACLR
rst => score[1][0].ACLR
rst => score[1][1].ACLR
rst => score[1][2].ACLR
rst => score[1][3].ACLR
rst => score[2][0].ACLR
rst => score[2][1].ACLR
rst => score[2][2].ACLR
rst => score[2][3].ACLR
rst => score[3][0].ACLR
rst => score[3][1].ACLR
rst => score[3][2].ACLR
rst => score[3][3].ACLR
rst => score[4][0].ACLR
rst => score[4][1].ACLR
rst => score[4][2].ACLR
rst => score[4][3].ACLR
rst => score[5][0].ACLR
rst => score[5][1].ACLR
rst => score[5][2].ACLR
rst => score[5][3].ACLR
rst => score[6][0].ACLR
rst => score[6][1].ACLR
rst => score[6][2].ACLR
rst => score[6][3].ACLR
rst => score[7][0].ACLR
rst => score[7][1].ACLR
rst => score[7][2].ACLR
rst => score[7][3].ACLR
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
scoreUP => score.OUTPUTSELECT
com[0] <= com[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
com[1] <= com[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
com[2] <= com[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
com[3] <= com[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
com[4] <= com[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
com[5] <= com[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
com[6] <= com[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
com[7] <= com[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num_data[0] <= num_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num_data[1] <= num_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num_data[2] <= num_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num_data[3] <= num_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num_data[4] <= num_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num_data[5] <= num_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num_data[6] <= num_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit1[0] <= digit1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit1[1] <= digit1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit1[2] <= digit1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit1[3] <= digit1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit2[0] <= digit2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit2[1] <= digit2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit2[2] <= digit2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit2[3] <= digit2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit3[0] <= digit3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit3[1] <= digit3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit3[2] <= digit3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit3[3] <= digit3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit4[0] <= digit4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit4[1] <= digit4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit4[2] <= digit4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit4[3] <= digit4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit5[0] <= digit5[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit5[1] <= digit5[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit5[2] <= digit5[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit5[3] <= digit5[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit6[0] <= digit6[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit6[1] <= digit6[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit6[2] <= digit6[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit6[3] <= digit6[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit7[0] <= digit7[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit7[1] <= digit7[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit7[2] <= digit7[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit7[3] <= digit7[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit8[0] <= digit8[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit8[1] <= digit8[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit8[2] <= digit8[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit8[3] <= digit8[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|mx_2x1:inst23
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst36
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst18
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|start_LCD:inst28
clk_1MHz => lcd_en~reg0.CLK
clk_1MHz => lcd_data[0]~reg0.CLK
clk_1MHz => lcd_data[1]~reg0.CLK
clk_1MHz => lcd_data[2]~reg0.CLK
clk_1MHz => lcd_data[3]~reg0.CLK
clk_1MHz => lcd_data[4]~reg0.CLK
clk_1MHz => lcd_data[5]~reg0.CLK
clk_1MHz => lcd_data[6]~reg0.CLK
clk_1MHz => lcd_data[7]~reg0.CLK
clk_1MHz => lcd_rw~reg0.CLK
clk_1MHz => lcd_rs~reg0.CLK
clk_1MHz => pos[0].CLK
clk_1MHz => pos[1].CLK
clk_1MHz => pos[2].CLK
clk_1MHz => pos[3].CLK
clk_1MHz => lcd_count[0].CLK
clk_1MHz => lcd_count[1].CLK
clk_1MHz => lcd_count[2].CLK
clk_1MHz => lcd_count[3].CLK
clk_1MHz => lcd_count[4].CLK
clk_1MHz => lcd_count[5].CLK
clk_1MHz => lcd_count[6].CLK
clk_1MHz => lcd_count[7].CLK
clk_1MHz => lcd_count[8].CLK
clk_1MHz => lcd_count[9].CLK
clk_1MHz => lcd_count[10].CLK
clk_1MHz => lcd_count[11].CLK
clk_1MHz => lcd_count[12].CLK
clk_1MHz => lcd_count[13].CLK
clk_1MHz => lcd_count[14].CLK
clk_1MHz => lcd_count[15].CLK
clk_1MHz => state~14.DATAIN
rst => pos[0].ACLR
rst => pos[1].ACLR
rst => pos[2].ACLR
rst => pos[3].ACLR
rst => lcd_count[0].ACLR
rst => lcd_count[1].ACLR
rst => lcd_count[2].ACLR
rst => lcd_count[3].ACLR
rst => lcd_count[4].ACLR
rst => lcd_count[5].ACLR
rst => lcd_count[6].ACLR
rst => lcd_count[7].ACLR
rst => lcd_count[8].ACLR
rst => lcd_count[9].ACLR
rst => lcd_count[10].ACLR
rst => lcd_count[11].ACLR
rst => lcd_count[12].ACLR
rst => lcd_count[13].ACLR
rst => lcd_count[14].ACLR
rst => lcd_count[15].ACLR
rst => state~16.DATAIN
rst => lcd_en~reg0.ENA
rst => lcd_rs~reg0.ENA
rst => lcd_rw~reg0.ENA
rst => lcd_data[7]~reg0.ENA
rst => lcd_data[6]~reg0.ENA
rst => lcd_data[5]~reg0.ENA
rst => lcd_data[4]~reg0.ENA
rst => lcd_data[3]~reg0.ENA
rst => lcd_data[2]~reg0.ENA
rst => lcd_data[1]~reg0.ENA
rst => lcd_data[0]~reg0.ENA
lcd_rs <= lcd_rs~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rw <= lcd_rw~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_en <= lcd_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[0] <= lcd_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[1] <= lcd_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[2] <= lcd_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[3] <= lcd_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[4] <= lcd_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[5] <= lcd_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[6] <= lcd_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[7] <= lcd_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|mx_2x1:inst29
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst33
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst42
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst19
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst34
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst46
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst20
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst31
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|super_mario_music:inst25
clk_1MHz => piezo~reg0.CLK
clk_1MHz => tempo_count[0].CLK
clk_1MHz => tempo_count[1].CLK
clk_1MHz => tempo_count[2].CLK
clk_1MHz => tempo_count[3].CLK
clk_1MHz => tempo_count[4].CLK
clk_1MHz => tempo_count[5].CLK
clk_1MHz => tempo_count[6].CLK
clk_1MHz => tempo_count[7].CLK
clk_1MHz => tempo_count[8].CLK
clk_1MHz => tempo_count[9].CLK
clk_1MHz => tempo_count[10].CLK
clk_1MHz => tempo_count[11].CLK
clk_1MHz => tempo_count[12].CLK
clk_1MHz => tempo_count[13].CLK
clk_1MHz => tempo_count[14].CLK
clk_1MHz => tempo_count[15].CLK
clk_1MHz => tempo_count[16].CLK
clk_1MHz => tempo_count[17].CLK
clk_1MHz => tempo_count[18].CLK
clk_1MHz => tempo_count[19].CLK
clk_1MHz => tempo_count[20].CLK
clk_1MHz => tempo_count[21].CLK
clk_1MHz => tempo_count[22].CLK
clk_1MHz => tempo_count[23].CLK
clk_1MHz => tempo_count[24].CLK
clk_1MHz => tempo_count[25].CLK
clk_1MHz => tempo_count[26].CLK
clk_1MHz => tempo_count[27].CLK
clk_1MHz => tempo_count[28].CLK
clk_1MHz => tempo_count[29].CLK
clk_1MHz => tempo_count[30].CLK
clk_1MHz => tempo_count[31].CLK
clk_1MHz => tempo[0].CLK
clk_1MHz => tempo[1].CLK
clk_1MHz => tempo[2].CLK
clk_1MHz => tempo[3].CLK
clk_1MHz => tempo[4].CLK
clk_1MHz => tempo[5].CLK
clk_1MHz => tempo[6].CLK
clk_1MHz => tempo[7].CLK
clk_1MHz => tempo[8].CLK
clk_1MHz => tempo[9].CLK
clk_1MHz => tempo[10].CLK
clk_1MHz => tempo[11].CLK
clk_1MHz => tempo[12].CLK
clk_1MHz => tempo[13].CLK
clk_1MHz => tempo[14].CLK
clk_1MHz => tempo[15].CLK
clk_1MHz => duration_counter[0].CLK
clk_1MHz => duration_counter[1].CLK
clk_1MHz => duration_counter[2].CLK
clk_1MHz => duration_counter[3].CLK
clk_1MHz => duration_counter[4].CLK
clk_1MHz => duration_counter[5].CLK
clk_1MHz => duration_counter[6].CLK
clk_1MHz => duration_counter[7].CLK
clk_1MHz => duration_counter[8].CLK
clk_1MHz => duration_counter[9].CLK
clk_1MHz => duration_counter[10].CLK
clk_1MHz => duration_counter[11].CLK
clk_1MHz => duration_counter[12].CLK
clk_1MHz => duration_counter[13].CLK
clk_1MHz => duration_counter[14].CLK
clk_1MHz => duration_counter[15].CLK
clk_1MHz => duration_counter[16].CLK
clk_1MHz => duration_counter[17].CLK
clk_1MHz => duration_counter[18].CLK
clk_1MHz => duration_counter[19].CLK
clk_1MHz => duration_counter[20].CLK
clk_1MHz => duration_counter[21].CLK
clk_1MHz => duration_counter[22].CLK
clk_1MHz => duration_counter[23].CLK
clk_1MHz => duration_counter[24].CLK
clk_1MHz => duration_counter[25].CLK
clk_1MHz => duration_counter[26].CLK
clk_1MHz => duration_counter[27].CLK
clk_1MHz => duration_counter[28].CLK
clk_1MHz => duration_counter[29].CLK
clk_1MHz => duration_counter[30].CLK
clk_1MHz => duration_counter[31].CLK
clk_1MHz => counter[0].CLK
clk_1MHz => counter[1].CLK
clk_1MHz => counter[2].CLK
clk_1MHz => counter[3].CLK
clk_1MHz => counter[4].CLK
clk_1MHz => counter[5].CLK
clk_1MHz => counter[6].CLK
clk_1MHz => counter[7].CLK
clk_1MHz => counter[8].CLK
clk_1MHz => counter[9].CLK
clk_1MHz => counter[10].CLK
clk_1MHz => counter[11].CLK
clk_1MHz => counter[12].CLK
clk_1MHz => counter[13].CLK
clk_1MHz => counter[14].CLK
clk_1MHz => counter[15].CLK
clk_1MHz => counter[16].CLK
clk_1MHz => counter[17].CLK
clk_1MHz => counter[18].CLK
clk_1MHz => counter[19].CLK
clk_1MHz => counter[20].CLK
clk_1MHz => counter[21].CLK
clk_1MHz => counter[22].CLK
clk_1MHz => counter[23].CLK
clk_1MHz => counter[24].CLK
clk_1MHz => counter[25].CLK
clk_1MHz => counter[26].CLK
clk_1MHz => counter[27].CLK
clk_1MHz => counter[28].CLK
clk_1MHz => counter[29].CLK
clk_1MHz => counter[30].CLK
clk_1MHz => counter[31].CLK
clk_1MHz => note_index[0].CLK
clk_1MHz => note_index[1].CLK
clk_1MHz => note_index[2].CLK
clk_1MHz => note_index[3].CLK
clk_1MHz => note_index[4].CLK
clk_1MHz => note_index[5].CLK
clk_1MHz => note_index[6].CLK
clk_1MHz => note_index[7].CLK
clk_1MHz => note_index[8].CLK
clk_1MHz => note_index[9].CLK
clk_1MHz => note_index[10].CLK
clk_1MHz => note_index[11].CLK
clk_1MHz => note_index[12].CLK
clk_1MHz => note_index[13].CLK
clk_1MHz => note_index[14].CLK
clk_1MHz => note_index[15].CLK
clk_1MHz => note_index[16].CLK
clk_1MHz => note_index[17].CLK
clk_1MHz => note_index[18].CLK
clk_1MHz => note_index[19].CLK
clk_1MHz => note_index[20].CLK
clk_1MHz => note_index[21].CLK
clk_1MHz => note_index[22].CLK
clk_1MHz => note_index[23].CLK
clk_1MHz => note_index[24].CLK
clk_1MHz => note_index[25].CLK
clk_1MHz => note_index[26].CLK
clk_1MHz => note_index[27].CLK
clk_1MHz => note_index[28].CLK
clk_1MHz => note_index[29].CLK
clk_1MHz => note_index[30].CLK
clk_1MHz => note_index[31].CLK
rst => piezo~reg0.ACLR
rst => tempo_count[0].ACLR
rst => tempo_count[1].ACLR
rst => tempo_count[2].ACLR
rst => tempo_count[3].ACLR
rst => tempo_count[4].ACLR
rst => tempo_count[5].ACLR
rst => tempo_count[6].ACLR
rst => tempo_count[7].ACLR
rst => tempo_count[8].ACLR
rst => tempo_count[9].ACLR
rst => tempo_count[10].ACLR
rst => tempo_count[11].ACLR
rst => tempo_count[12].ACLR
rst => tempo_count[13].ACLR
rst => tempo_count[14].ACLR
rst => tempo_count[15].ACLR
rst => tempo_count[16].ACLR
rst => tempo_count[17].ACLR
rst => tempo_count[18].ACLR
rst => tempo_count[19].ACLR
rst => tempo_count[20].ACLR
rst => tempo_count[21].ACLR
rst => tempo_count[22].ACLR
rst => tempo_count[23].ACLR
rst => tempo_count[24].ACLR
rst => tempo_count[25].ACLR
rst => tempo_count[26].ACLR
rst => tempo_count[27].ACLR
rst => tempo_count[28].ACLR
rst => tempo_count[29].ACLR
rst => tempo_count[30].ACLR
rst => tempo_count[31].ACLR
rst => tempo[0].ACLR
rst => tempo[1].ACLR
rst => tempo[2].ACLR
rst => tempo[3].PRESET
rst => tempo[4].ACLR
rst => tempo[5].ACLR
rst => tempo[6].PRESET
rst => tempo[7].PRESET
rst => tempo[8].ACLR
rst => tempo[9].ACLR
rst => tempo[10].ACLR
rst => tempo[11].ACLR
rst => tempo[12].ACLR
rst => tempo[13].ACLR
rst => tempo[14].ACLR
rst => tempo[15].ACLR
rst => duration_counter[0].ACLR
rst => duration_counter[1].ACLR
rst => duration_counter[2].ACLR
rst => duration_counter[3].ACLR
rst => duration_counter[4].ACLR
rst => duration_counter[5].ACLR
rst => duration_counter[6].ACLR
rst => duration_counter[7].ACLR
rst => duration_counter[8].ACLR
rst => duration_counter[9].ACLR
rst => duration_counter[10].ACLR
rst => duration_counter[11].ACLR
rst => duration_counter[12].ACLR
rst => duration_counter[13].ACLR
rst => duration_counter[14].ACLR
rst => duration_counter[15].ACLR
rst => duration_counter[16].ACLR
rst => duration_counter[17].ACLR
rst => duration_counter[18].ACLR
rst => duration_counter[19].ACLR
rst => duration_counter[20].ACLR
rst => duration_counter[21].ACLR
rst => duration_counter[22].ACLR
rst => duration_counter[23].ACLR
rst => duration_counter[24].ACLR
rst => duration_counter[25].ACLR
rst => duration_counter[26].ACLR
rst => duration_counter[27].ACLR
rst => duration_counter[28].ACLR
rst => duration_counter[29].ACLR
rst => duration_counter[30].ACLR
rst => duration_counter[31].ACLR
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => counter[8].ACLR
rst => counter[9].ACLR
rst => counter[10].ACLR
rst => counter[11].ACLR
rst => counter[12].ACLR
rst => counter[13].ACLR
rst => counter[14].ACLR
rst => counter[15].ACLR
rst => counter[16].ACLR
rst => counter[17].ACLR
rst => counter[18].ACLR
rst => counter[19].ACLR
rst => counter[20].ACLR
rst => counter[21].ACLR
rst => counter[22].ACLR
rst => counter[23].ACLR
rst => counter[24].ACLR
rst => counter[25].ACLR
rst => counter[26].ACLR
rst => counter[27].ACLR
rst => counter[28].ACLR
rst => counter[29].ACLR
rst => counter[30].ACLR
rst => counter[31].ACLR
rst => note_index[0].ACLR
rst => note_index[1].ACLR
rst => note_index[2].ACLR
rst => note_index[3].ACLR
rst => note_index[4].ACLR
rst => note_index[5].ACLR
rst => note_index[6].ACLR
rst => note_index[7].ACLR
rst => note_index[8].ACLR
rst => note_index[9].ACLR
rst => note_index[10].ACLR
rst => note_index[11].ACLR
rst => note_index[12].ACLR
rst => note_index[13].ACLR
rst => note_index[14].ACLR
rst => note_index[15].ACLR
rst => note_index[16].ACLR
rst => note_index[17].ACLR
rst => note_index[18].ACLR
rst => note_index[19].ACLR
rst => note_index[20].ACLR
rst => note_index[21].ACLR
rst => note_index[22].ACLR
rst => note_index[23].ACLR
rst => note_index[24].ACLR
rst => note_index[25].ACLR
rst => note_index[26].ACLR
rst => note_index[27].ACLR
rst => note_index[28].ACLR
rst => note_index[29].ACLR
rst => note_index[30].ACLR
rst => note_index[31].ACLR
piezo <= piezo~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|mx_2x1:inst26
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|mx_2x1:inst40
m_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
s_0 => inst1.IN0
sel => inst3.IN0
sel => inst.IN1
s_1 => inst.IN0


|main_test|motor:inst7
clk => count[0].CLK
clk => count[1].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
rst => count[0].ACLR
rst => count[1].ACLR
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => counter[8].ACLR
rst => counter[9].ACLR
rst => counter[10].ACLR
rst => counter[11].ACLR
rst => counter[12].ACLR
rst => counter[13].ACLR
rst => counter[14].ACLR
rst => counter[15].ACLR
a <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
b <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
c <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
d <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE


|main_test|mx_8bit_2x1:inst35
m_out[0] <= inst9.DB_MAX_OUTPUT_PORT_TYPE
m_out[1] <= inst10.DB_MAX_OUTPUT_PORT_TYPE
m_out[2] <= inst11.DB_MAX_OUTPUT_PORT_TYPE
m_out[3] <= inst12.DB_MAX_OUTPUT_PORT_TYPE
m_out[4] <= inst21.DB_MAX_OUTPUT_PORT_TYPE
m_out[5] <= inst22.DB_MAX_OUTPUT_PORT_TYPE
m_out[6] <= inst23.DB_MAX_OUTPUT_PORT_TYPE
m_out[7] <= inst24.DB_MAX_OUTPUT_PORT_TYPE
ce => inst8.IN0
ce => inst.IN1
ce => inst1.IN1
ce => inst2.IN1
ce => inst3.IN1
ce => inst17.IN1
ce => inst18.IN1
ce => inst19.IN1
ce => inst20.IN1
s0[0] => inst4.IN1
s0[1] => inst5.IN1
s0[2] => inst6.IN1
s0[3] => inst7.IN1
s0[4] => inst13.IN1
s0[5] => inst14.IN1
s0[6] => inst15.IN1
s0[7] => inst16.IN1
s1[0] => inst.IN0
s1[1] => inst1.IN0
s1[2] => inst2.IN0
s1[3] => inst3.IN0
s1[4] => inst17.IN0
s1[5] => inst18.IN0
s1[6] => inst19.IN0
s1[7] => inst20.IN0


|main_test|mx_8bit_2x1:inst47
m_out[0] <= inst9.DB_MAX_OUTPUT_PORT_TYPE
m_out[1] <= inst10.DB_MAX_OUTPUT_PORT_TYPE
m_out[2] <= inst11.DB_MAX_OUTPUT_PORT_TYPE
m_out[3] <= inst12.DB_MAX_OUTPUT_PORT_TYPE
m_out[4] <= inst21.DB_MAX_OUTPUT_PORT_TYPE
m_out[5] <= inst22.DB_MAX_OUTPUT_PORT_TYPE
m_out[6] <= inst23.DB_MAX_OUTPUT_PORT_TYPE
m_out[7] <= inst24.DB_MAX_OUTPUT_PORT_TYPE
ce => inst8.IN0
ce => inst.IN1
ce => inst1.IN1
ce => inst2.IN1
ce => inst3.IN1
ce => inst17.IN1
ce => inst18.IN1
ce => inst19.IN1
ce => inst20.IN1
s0[0] => inst4.IN1
s0[1] => inst5.IN1
s0[2] => inst6.IN1
s0[3] => inst7.IN1
s0[4] => inst13.IN1
s0[5] => inst14.IN1
s0[6] => inst15.IN1
s0[7] => inst16.IN1
s1[0] => inst.IN0
s1[1] => inst1.IN0
s1[2] => inst2.IN0
s1[3] => inst3.IN0
s1[4] => inst17.IN0
s1[5] => inst18.IN0
s1[6] => inst19.IN0
s1[7] => inst20.IN0


|main_test|mx_8bit_2x1:inst15
m_out[0] <= inst9.DB_MAX_OUTPUT_PORT_TYPE
m_out[1] <= inst10.DB_MAX_OUTPUT_PORT_TYPE
m_out[2] <= inst11.DB_MAX_OUTPUT_PORT_TYPE
m_out[3] <= inst12.DB_MAX_OUTPUT_PORT_TYPE
m_out[4] <= inst21.DB_MAX_OUTPUT_PORT_TYPE
m_out[5] <= inst22.DB_MAX_OUTPUT_PORT_TYPE
m_out[6] <= inst23.DB_MAX_OUTPUT_PORT_TYPE
m_out[7] <= inst24.DB_MAX_OUTPUT_PORT_TYPE
ce => inst8.IN0
ce => inst.IN1
ce => inst1.IN1
ce => inst2.IN1
ce => inst3.IN1
ce => inst17.IN1
ce => inst18.IN1
ce => inst19.IN1
ce => inst20.IN1
s0[0] => inst4.IN1
s0[1] => inst5.IN1
s0[2] => inst6.IN1
s0[3] => inst7.IN1
s0[4] => inst13.IN1
s0[5] => inst14.IN1
s0[6] => inst15.IN1
s0[7] => inst16.IN1
s1[0] => inst.IN0
s1[1] => inst1.IN0
s1[2] => inst2.IN0
s1[3] => inst3.IN0
s1[4] => inst17.IN0
s1[5] => inst18.IN0
s1[6] => inst19.IN0
s1[7] => inst20.IN0


|main_test|hit_COLORLED:inst11
clk => RED[0]~reg0.CLK
clk => RED[1]~reg0.CLK
clk => RED[2]~reg0.CLK
clk => RED[3]~reg0.CLK
clk => GREEN[0]~reg0.CLK
clk => GREEN[1]~reg0.CLK
clk => GREEN[2]~reg0.CLK
clk => GREEN[3]~reg0.CLK
clk => toggle_hit[0].CLK
clk => toggle_hit[1].CLK
clk => toggle_hit[2].CLK
clk => toggle_hit[3].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
rst => RED[0]~reg0.ACLR
rst => RED[1]~reg0.ACLR
rst => RED[2]~reg0.ACLR
rst => RED[3]~reg0.ACLR
rst => GREEN[0]~reg0.PRESET
rst => GREEN[1]~reg0.PRESET
rst => GREEN[2]~reg0.PRESET
rst => GREEN[3]~reg0.PRESET
rst => toggle_hit[0].ACLR
rst => toggle_hit[1].ACLR
rst => toggle_hit[2].ACLR
rst => toggle_hit[3].ACLR
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => counter[8].ACLR
rst => counter[9].ACLR
rst => counter[10].ACLR
rst => counter[11].ACLR
rst => counter[12].ACLR
rst => counter[13].ACLR
rst => counter[14].ACLR
rst => counter[15].ACLR
rst => counter[16].ACLR
rst => counter[17].ACLR
rst => counter[18].ACLR
rst => counter[19].ACLR
rst => counter[20].ACLR
rst => counter[21].ACLR
rst => counter[22].ACLR
rst => counter[23].ACLR
rst => counter[24].ACLR
rst => counter[25].ACLR
rst => counter[26].ACLR
rst => counter[27].ACLR
rst => counter[28].ACLR
rst => counter[29].ACLR
rst => counter[30].ACLR
rst => counter[31].ACLR
hit => toggle_hit.OUTPUTSELECT
hit => toggle_hit.OUTPUTSELECT
hit => toggle_hit.OUTPUTSELECT
hit => toggle_hit.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => counter.OUTPUTSELECT
hit => RED[0]~reg0.ENA
hit => GREEN[3]~reg0.ENA
hit => GREEN[2]~reg0.ENA
hit => GREEN[1]~reg0.ENA
hit => GREEN[0]~reg0.ENA
hit => RED[3]~reg0.ENA
hit => RED[2]~reg0.ENA
hit => RED[1]~reg0.ENA
GREEN[0] <= GREEN[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
GREEN[1] <= GREEN[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
GREEN[2] <= GREEN[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
GREEN[3] <= GREEN[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RED[0] <= RED[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RED[1] <= RED[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RED[2] <= RED[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RED[3] <= RED[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BLUE[0] <= <GND>
BLUE[1] <= <GND>
BLUE[2] <= <GND>
BLUE[3] <= <GND>


